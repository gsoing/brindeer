openapi: 3.0.0
info:
  title: Tindeer API
  description: Notre super API pour notre application mobile de rencontre de Rennes
  version: 1.0.0
servers:
  - url: http://kong:8000/api/v1
    description: kong
  - url: http://api-match:3000/api/v1
    description: api-match - Docker
  - url: http://localhost:3000/api/v1
    description: api-match - Local
  - url: http://localhost:9080/api/v1
    description: profile api - Docker
  - url: http://localhost:9090/api/v1
    description: profile api - Local
components:
  securitySchemes:
    oAuthSample:    # <---- arbitrary name
      type: oauth2
      description: This API uses OAuth 2 with the implicit grant flow. [More info](https://api.example.com/docs/auth)
      flows:
        authorizationCode:   # <---- OAuth flow(authorizationCode, implicit, password or clientCredentials)
          authorizationUrl: http://keycloak:8080/realms/tindeer/protocol/openid-connect/auth
          tokenUrl: http://keycloak:8080/realms/tindeer/protocol/openid-connect/token
          scopes:
            profile: access profile
            email: access email
security:
  - oAuthSample:
      - profile
      - email
paths:
  /profiles/current:
    get:
      summary: Returns the current user profile
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string

  /users:
    get:
      summary: Retrieves the list of users
      responses:
        '200':
          description: Successful retrieval of user list
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      example: Yannis
                    coordinates:
                      type: object
                      properties:
                        latitude:
                          type: number
                          format: float
                          example: 48.856483
                        longitude:
                          type: number
                          format: float
                          example: 2.3522219
    post:
      summary: Creates a new user profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Yannis
                coordinates:
                  type: object
                  properties:
                    latitude:
                      type: number
                      format: float
                      example: 48.856483
                    longitude:
                      type: number
                      format: float
                      example: 2.3522219
              required:
                - name
                - coordinates
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    type: object
                    properties:
                      username:
                        type: string
                      coordinates:
                        type: object
                        properties:
                          latitude:
                            type: number
                            format: float
                          longitude:
                            type: number
                            format: float
                      _id:
                        type: string
        '400':
          description: Invalid user profile data
        '500':
          description: Internal Server Error - Error occurred while creating user profile

  /profiles:
    get:
      summary: Retrieves user profiles within 100 meters of the connected user
      responses:
        '200':
          description: OK - List of user profiles within 100 meters of the connected user
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      example: Yannis
                    coordinates:
                      type: object
                      properties:
                        latitude:
                          type: number
                          format: float
                          example: 48.856483
                        longitude:
                          type: number
                          format: float
                          example: 2.3522219
        '500':
          description: Internal Server Error - Error occurred while retrieving user profiles within 100 meters
