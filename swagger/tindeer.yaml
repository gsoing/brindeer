openapi: 3.0.0
info:
  title: Tindeer API
  description: Notre super API pour notre application mobile de rencontre de Rennes
  version: 1.0.0
servers:
  - url: http://localhost:9080/api/v1
    description: Environnement de test Docker
  - url: http://localhost:9090/api/v1
    description: Environnement de test local
components:
  securitySchemes:
    oAuthSample:
      type: oauth2
      description: This API uses OAuth 2 with the implicit grant flow. [More info](https://api.example.com/docs/auth)
      flows:
        authorizationCode:
          authorizationUrl: http://keycloak:8080/realms/tindeer/protocol/openid-connect/auth
          tokenUrl: http://keycloak:8080/realms/tindeer/protocol/openid-connect/token
          scopes:
            profile: access profile
            email: access email
security:
  - oAuthSample:
      - profile
      - email
paths:
  /profiles/current:
    get:
      summary: Retourne le profile courant de l'utilisateur
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string

  /profiles:
    post:
      summary: Crée le profile d'un utilisateur
      responses:
        '201':
          description: Profile créé
        '400':
          description: Données invalides fournies
    get:
      summary: Récupère la liste des profils
      responses:
        '200':
          description: Liste des profils

  /profiles/{id}:
    get:
      summary: Récupère le profil d'un utilisateur grâce à son ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Détails du profil utilisateur
        '404':
          description: Profil non trouvé

    put:
      summary: Met à jour le profil d'un utilisateur
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Profil mis à jour
        '400':
          description: Données invalides fournies
        '404':
          description: Profil non trouvé

  /profiles/search:
    get:
      summary: Recherche de profils
      responses:
        '200':
          description: Liste des profils correspondants

  /profiles/search-by-mail:
    get:
      summary: Recherche de profils par e-mail
      responses:
        '200':
          description: Liste des profils correspondants

  /matchs/users:
    get:
      summary: Récupère les utilisateurs à 100m
      responses:
        '200':
          description: Liste des utilisateurs proches

  /matchs:
    post:
      summary: Crée un match
      responses:
        '201':
          description: Match créé
        '400':
          description: Données invalides fournies

    get:
      summary: Voir les personnes avec qui on a matché
      responses:
        '200':
          description: Liste des matchs
